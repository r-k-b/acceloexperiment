swagger: "2.0"
info:
  version: 1.0.0
  title: acceloexperiment
  description: Let's see if this stays more up-to-date than [the official docs.](https://affinitylive.jira.com/wiki/display/APIS/Accelo+API)
  termsOfService: http://swagger.io/terms/
  contact:
    name: Robert K. Bell
    email: robert@bigbluedigital.com.au
    url: https://github.com/r-k-b/acceloexperiment
  license:
    name: GPL
    url: https://github.com/r-k-b/acceloexperiment/blob/master/LICENSE
host: YOURDEPLOYMENTNAME.api.accelo.com
basePath: /api/v0
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
  - text/xml
  - text/x-yaml
paths:
  /object_budgets:
    get:
      description: |
        Returns an array of objectBudgets.
      operationId: findObjectBudgets
      externalDocs:
        description: Official documentation.
        url: https://affinitylive.jira.com/wiki/display/APIS/GET+object_budgets
      parameters:
        - name: _page
          in: query
          description: The page of the list to display. For example, 5 will display the fifth page. Each page contains 10 resources.
          required: false
          type: integer
        - name: _limit
          in: query
          description: The maximum number of items to return.
          required: false
          type: integer
          default: 10
          maximum: 50
        - name: _offset
          in: query
          description: |
            The position in the list of resources to return from. 
            For example, if you had 20 resources and requested an offset of 10. Resources 10 to 19 would be returned.
            Offset cannot be used in conjunction with _page.
          required: false
          type: integer
          default: 0
        - name: _fields
          in: query
          description: Allows you to specify optional fields and linked objects to include in the response.
          required: false
          type: array
          items:
            type: string
            enum: [clueless, lazy, adventurous, aggressive]
          collectionFormat: csv
      responses:
        200:
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /object_budgets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Pet:
    allOf:
      - $ref: '#/definitions/NewPet'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewPet:
    required:
      - name
    properties:
      name:
        type: string
      tag:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string